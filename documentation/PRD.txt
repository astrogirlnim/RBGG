# Project Name
Prompt2Play (Discord → Roblox Game Generator)

## Project Description
A two-pronged system:
1. **Discord Moderator Bot** – Manages submissions, enforces safety, coordinates queues, and communicates statuses with users.
2. **Game Generation Pipeline** – Converts approved submissions into playable Roblox experiences via a safe, template-first AI process, publishes them under the “Prompted Playgrounds” Roblox Group, and returns links with splash-screen attribution.

## Target Audience
- Teens ages 13–17 on Discord interested in Roblox creation (primary)
- Parents/educators observing teen creativity (secondary)
- Community moderators/volunteers (internal)

---

## Desired Features

### 1. Discord Moderator Bot

#### User Interaction & Queue
- [ ] Slash command + modal submissions
    - [ ] `/propose` opens a form: genre (Obby/Tycoon/Simulator), theme, 1–2 mechanics, difficulty, monetization toggle
- [ ] Status tracker & queue
    - [ ] Thread/embed per submission with states: In Review → Approved → Generating → Playtest → Published/Rejected
- [ ] Rate limiting & freemium
    - [ ] Free: 3 submissions/day/user
    - [ ] Premium roles: queue priority +2/day (total 5/day)
- [ ] Public queue position & ETAs

#### Moderation & Safety
- [ ] Automated pre- and post-submission filters
    - [ ] Profanity/NSFW/PII/hate/violence classifiers; jailbreak/obfuscation detection
    - [ ] Prompt linting with improvement suggestions
- [ ] Human review queue
    - [ ] 2–3 volunteer moderators at MVP
    - [ ] SLA target: <24h review; alerts if pending >12h
    - [ ] Approve/Reject/Edit with quick-fix buttons
- [ ] Extended banned themes & words
    - [ ] Politics, real-world tragedies, gambling, romance, alcohol/drugs, conspiracy content, predatory behavior
    - [ ] Mirrored in Roblox chat/GUI text
- [ ] Reporting & takedowns
    - [ ] `/report <id>` → mod channel; one-click unpublish & notify reporter

#### Ops & Alerts
- [ ] Private #ops channel for alerts
    - [ ] Downtime, error bursts, queue backlogs
- [ ] Daily digest at 8 AM America/Chicago
- [ ] Kill-switch & maintenance mode
    - [ ] Pause new submissions/generations; post server notice

---

### 2. Game Generation Pipeline

#### Template-First AI Assembly
- [ ] Start with 1 curated template per genre:
    - **Obby:** checkpoints + varied obstacles (disappearing parts, crushers)
    - **Tycoon:** income/upgrade cycle (2–3 tiers) + customization
    - **Simulator:** 2–3 tier upgrade loop + collection + leveling
- [ ] Prompt→parameter mapping
    - [ ] Difficulty, progression speed, collectible types

#### Code Synthesis & Safety
- [ ] Use vetted modules; sanitize asset IDs; ensure data store safety; anti-exploit basics
- [ ] Automated playability checks
    - [ ] Spawn, movement, core loop, error logs
- [ ] Human playtest step (2–5 min) before publish

#### Failure Handling
- [ ] Up to 3 automated retries with refined prompts
- [ ] Safe-mode fallback template if still failing
- [ ] Escalate to manual fix; notify user in Discord

#### Roblox Publishing
- [ ] Group-based Open Cloud publishing
    - [ ] Group name: Prompted Playgrounds
    - [ ] Limited-scope API key; Universe/Place updates; retry with backoff
- [ ] Game metadata & attribution
    - [ ] Splash-screen “Idea by @User from Discord” + end credits + game description
- [ ] Iteration flow
    - [ ] `/update_game <id>` → generate v2+ from feedback

#### Community Feedback
- [ ] Showcase channel posts
    - [ ] Auto-embed with game link + thumbnail
    - [ ] Reaction voting; weekly top picks
- [ ] Auto-generated thumbnails (MVP)
    - [ ] Scene staging + capture; trailers post-MVP

---

## Compliance & Privacy
- [ ] Age scope 13+ only (Discord TOS compliant)
    - [ ] Join gate with self-attestation and rules acknowledgement
- [ ] Data minimization
    - [ ] Store Discord ID, submission text, decision logs, game links only
- [ ] Retention & deletion
    - [ ] User-initiated erasure command; periodic log pruning

---

## Monetization (Freemium)
- [ ] Premium roles
    - [ ] Queue priority +2 daily submissions; managed via Patreon/Stripe role sync
- [ ] Transparent fairness
    - [ ] Public queue position & caps to prevent premium starvation of free users

---

## Design Requests
- [ ] Kid-friendly, readable Discord embeds
    - [ ] Clear status badges (color-coded), progress bars, concise language
- [ ] Template cards per genre
    - [ ] Icons + 1-sentence loop summary; safe color palette; accessibility contrast
- [ ] Mod dashboard minimalism
    - [ ] Approve/Reject/Edit in one view; highlight policy conflicts inline

---

## Other Notes
- Persistent compute required for Discord Gateway bot; serverless only for interactions/webhooks.
- Secrets in managed vault; least-privilege Open Cloud scopes.
- MVP target: ASAP; 4–6 week build feasible with parallel workstreams.

